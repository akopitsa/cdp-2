{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "AWS CloudFormation Template for Installing PuppetServer and PuppetAgent with NTP-server which deployed via Puppet",

  "Resources" : {
    "PuppetServerInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : "ami-ae7bfdb8",
        "KeyName" : "id_rsa",
        "InstanceType" : "t2.micro",
        "AvailabilityZone" : "us-east-1a",
        "SecurityGroups" : [ {"Ref" : "PuppetSecurityGroup"} ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "puppet-server"
          }
        ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                "#!/bin/bash \n",
                "rpm -ivh https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm \n",
                "yum update \n",
                "dd if=/dev/zero of=/swapfile bs=1M count=2560 \n",
                "chown root:root  /swapfile \n",
                "chmod 600 /swapfile \n",
                "mkswap /swapfile \n",
                "swapon /swapfile \n",
                "echo \"/swapfile   swap    swap    sw  0   0\" >> /etc/fstab \n",
                "echo \"vm.swappiness = 100\" >> /etc/sysctl.conf \n",
                "echo \"vm.vfs_cache_pressure = 50\" >> /etc/sysctl.conf \n",
                "sysctl -p \n",
                "yum -y install epel-release \n",
                "yum -y install puppetserver git nginx tree ntpdate mc \n",
                "systemctl start nginx.service \n",
                "timedatectl set-timezone Europe/Kiev \n",
                "ntpdate 0.ua.pool.ntp.org \n",
                "sed -i -e 's/JAVA_ARGS=\"-Xms2g -Xmx2g -XX:MaxPermSize=256m\"/JAVA_ARGS=\"-Xms512m -Xmx512m\"/' \"/etc/sysconfig/puppetserver\" \n",
                "echo 'autosign = true' >>  /etc/puppetlabs/puppet/puppet.conf\n",
                "echo '[main]' >> /etc/puppetlabs/puppet/puppet.conf\n",
                "SERVERHOSTNAME=`/usr/bin/curl http://169.254.169.254/latest/meta-data/public-hostname`\n",
                "echo \"certname =  $SERVERHOSTNAME\" >> /etc/puppetlabs/puppet/puppet.conf\n",
                "echo \"server =  $SERVERHOSTNAME\" >> /etc/puppetlabs/puppet/puppet.conf\n",
                "echo 'environment = production' >> /etc/puppetlabs/puppet/puppet.conf\n",
                "echo 'runinterval = 2m' >> /etc/puppetlabs/puppet/puppet.conf\n",
                "cat /dev/null > /etc/puppetlabs/puppet/hiera.yaml \n",
                "echo ':backends:' >> /etc/puppetlabs/puppet/hiera.yaml \n",
                "echo '  - yaml' >> /etc/puppetlabs/puppet/hiera.yaml \n",
                "echo ':hierarchy:' >> /etc/puppetlabs/puppet/hiera.yaml \n",
                "echo \"  - 'nodes/%{::trusted.certname}'\" >> /etc/puppetlabs/puppet/hiera.yaml \n",
                "echo \"  - 'nodes/%{::fqdn}'\" >> /etc/puppetlabs/puppet/hiera.yaml \n",
                "echo '  - common' >> /etc/puppetlabs/puppet/hiera.yaml \n",
                "echo ':yaml:' >> /etc/puppetlabs/puppet/hiera.yaml \n",
                "echo \"  :datadir: '/etc/puppetlabs/code/environments/%{::environment}/hieradata'\" >> /etc/puppetlabs/puppet/hiera.yaml \n",
                "/opt/puppetlabs/puppet/bin/gem install r10k \n",
                "echo \":cachedir: '/var/cache/r10k'\" >> /etc/puppetlabs/puppet/r10k.yaml \n",
                "echo ':sources:' >> /etc/puppetlabs/puppet/r10k.yaml \n",
                "echo '  cdp:' >> /etc/puppetlabs/puppet/r10k.yaml \n",
                "echo \"    remote: 'https://github.com/akopitsa/cdp-control-repo.git'\" >> /etc/puppetlabs/puppet/r10k.yaml \n",
                "echo \"    basedir: '/etc/puppetlabs/code/environments'\" >> /etc/puppetlabs/puppet/r10k.yaml \n",
                "echo '    prefix: false' >> /etc/puppetlabs/puppet/r10k.yaml \n",
                "/opt/puppetlabs/puppet/bin/r10k deploy environment production -pv -c /etc/puppetlabs/puppet/r10k.yaml \n",
                "/opt/puppetlabs/puppet/bin/r10k deploy environment development -pv -c /etc/puppetlabs/puppet/r10k.yaml \n",
                "free && sync && echo 3 > /proc/sys/vm/drop_caches && free \n",
                "systemctl start puppetserver\n",
                "systemctl enable puppetserver\n"
              ]
            ]
          }
        }
     }
   },

   "PuppetAgentInstance" : {
     "Type" : "AWS::EC2::Instance",
     "Properties" : {
       "ImageId" : "ami-ae7bfdb8",
       "KeyName" : "id_rsa",
       "InstanceType" : "t2.micro",
       "AvailabilityZone" : "us-east-1a",
       "SecurityGroups" : [ {"Ref" : "PuppetSecurityGroup"} ],
       "Tags": [
         {
           "Key": "Name",
           "Value": "puppet-agent"
         }
       ],
       "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                "#!/bin/bash \n",
                "rpm -ivh https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm \n",
                "yum update \n",
                "yum -y install puppet-agent git tree mc \n",
                "timedatectl set-timezone Europe/Kiev \n",
                "ntpdate 0.ua.pool.ntp.org \n",
                "echo '[main]' >> /etc/puppetlabs/puppet/puppet.conf\n",
                "AGENTHOSTNAME=`/usr/bin/curl http://169.254.169.254/latest/meta-data/public-hostname`\n",
                "echo \"certname =  $AGENTHOSTNAME\" >> /etc/puppetlabs/puppet/puppet.conf\n",
                "echo 'environment = production' >> /etc/puppetlabs/puppet/puppet.conf\n",
                "echo 'runinterval = 2m' >> /etc/puppetlabs/puppet/puppet.conf\n",
                "echo 'server = ", {"Fn::GetAtt" : [ "PuppetServerInstance", "PublicDnsName" ]}, "'  >> /etc/puppetlabs/puppet/puppet.conf\n",
                "/opt/puppetlabs/bin/puppet resource service puppet ensure=running enable=true"
              ]
            ]
          }
        }
    }
  },

   "PuppetSecurityGroup" : {
     "Type" : "AWS::EC2::SecurityGroup",
     "Properties" : {
       "GroupDescription" : "Enable HTTP access via port 80",
       "SecurityGroupIngress" : [
         {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"},
         {"IpProtocol" : "tcp", "FromPort" : "8140", "ToPort" : "8140", "CidrIp" : "0.0.0.0/0"}
       ]
     }
   }
 },
  "Outputs" : {
    "PuppetAgentInstanceId" : {
      "Description" : "Puppet Agent Instance of the newly created EC2 instance",
      "Value" : { "Ref" : "PuppetAgentInstance" }
    },
    "PuppetAgentInstanceId" : {
      "Description" : "Puppet Agent Instance of the newly created EC2 instance",
      "Value" : { "Ref" : "PuppetServerInstance" }
    },
    "PuppetAgentPublicDNS" : {
      "Description" : "Public DNSName of the newly created Puppet Agent instance",
      "Value" : { "Fn::GetAtt" : [ "PuppetAgentInstance", "PublicDnsName" ] }
    },
    "PuppetAgentPublicIP" : {
      "Description" : "Public IP address of the newly created Puppet Agent instance",
      "Value" : { "Fn::GetAtt" : [ "PuppetAgentInstance", "PublicIp" ] }
    },
    "PuppetServerInstanceId" : {
      "Description" : "Puppet Agent Instance of the newly created Puppet Server instance",
      "Value" : { "Ref" : "PuppetServerInstance" }
    },
    "PuppetServerInstanceId" : {
      "Description" : "Puppet Agent Instance of the newly created Puppet Server instance",
      "Value" : { "Ref" : "PuppetServerInstance" }
    },
    "PuppetServerPublicDNS" : {
      "Description" : "Public DNSName of the newly created Puppet Server instance",
      "Value" : { "Fn::GetAtt" : [ "PuppetServerInstance", "PublicDnsName" ] }
    },
    "PuppetServerPublicIP" : {
      "Description" : "Public IP address of the newly created Puppet Server instance",
      "Value" : { "Fn::GetAtt" : [ "PuppetServerInstance", "PublicIp" ] }
    }
  }
}
